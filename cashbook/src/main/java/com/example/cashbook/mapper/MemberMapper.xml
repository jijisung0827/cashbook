<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <!-- package에 이름과 xml의 이름을 적어 주소를 부른다 -->
<mapper namespace="com.example.cashbook.mapper.MemberMapper"> 
	<!-- 삽입 -->
	<insert id="insertMember" parameterType="com.example.cashbook.vo.Member">
		INSERT INTO member(
			member_id,
			member_pw,
			member_name,
			member_addr,
			member_phone,
			member_email,
			member_pic
		)VALUES(
			#{memberId},
			PASSWORD(#{memberPw}),
			#{memberName},
			#{memberAddr},
			#{memberPhone},
			#{memberEmail},
			#{memberPic}
		)
	</insert>
	<!-- 로그인 확인 -->
	<select id="selectLoginMember" parameterType="com.example.cashbook.vo.LoginMember" resultType="com.example.cashbook.vo.LoginMember">
		SELECT 
			member_id as memberId,
			member_pw as memberPw
		FROM member
		WHERE member_id = #{memberId}
		AND member_pw = PASSWORD(#{memberPw})
	</select>
	<!-- 아이디 중복체크 -->
	<select id="seleceMemberId" parameterType="String" resultType="String">
		SELECT
			member_id
		FROM member
		WHERE member_id = #{memberIdCheck}
		
	</select>
	<!-- 회원 정보 보기 -->
	<select id="selectMemberOne" parameterType="com.example.cashbook.vo.LoginMember" resultType="com.example.cashbook.vo.Member">
		SELECT
			member_id as memberId,
			member_name as memberName,
			member_addr as memberAddr,
			member_phone as memberPhone,
			member_email as memberEmail,
			member_pic as memberPic
		FROM member
		WHERE member_id = #{memberId}		
	</select>
	<!-- 회원 탈퇴 -->
	<delete id="deleteMember" parameterType="com.example.cashbook.vo.Member">
		DELETE
		FROM member
		WHERE member_id = #{memberId}
		AND member_pw = PASSWORD(#{memberPw})
	</delete>
	<!-- 아이디 찾기 -->
	<select id="findMemberId" parameterType="com.example.cashbook.vo.Member" resultType="String">
		SELECT
			CONCAT(SUBSTRING(member_id,1,3), '****')
		FROM member
		WHERE member_name = #{memberName}
		AND member_phone = #{memberPhone}
		AND member_email = #{memberEmail}
	</select>
	<!-- 비밀번호 찾기 
	1. 사용자가 입력한 id와 이메일이 일치하면 pw변경(랜덤문자열) update
	2. pw를 메일로 전송-->
	<update id="updateMemberPw" parameterType="com.example.cashbook.vo.Member">
		UPDATE member
		SET	member_pw = PASSWORD(#{memberPw})
		WHERE member_id = #{memberId}
		AND member_email = #{memberEmail}
	
	</update>
	
	
	
	
</mapper>